{"code":"import { closestCorners, getViewRect, getScrollableAncestors, KeyboardCode, } from '@dnd-kit/core';\r\nconst directions = [\r\n    KeyboardCode.Down,\r\n    KeyboardCode.Right,\r\n    KeyboardCode.Up,\r\n    KeyboardCode.Left,\r\n];\r\nexport const sortableKeyboardCoordinates = (event, { context: { active, droppableContainers, translatedRect, scrollableAncestors } }) => {\r\n    if (directions.includes(event.code)) {\r\n        event.preventDefault();\r\n        if (!active || !translatedRect) {\r\n            return;\r\n        }\r\n        const filteredContainers = [];\r\n        droppableContainers.getEnabled().forEach((entry) => {\r\n            if (!entry || entry?.disabled) {\r\n                return;\r\n            }\r\n            const node = entry?.node.current;\r\n            if (!node) {\r\n                return;\r\n            }\r\n            const rect = getViewRect(node);\r\n            const container = {\r\n                ...entry,\r\n                rect: {\r\n                    current: rect,\r\n                },\r\n            };\r\n            switch (event.code) {\r\n                case KeyboardCode.Down:\r\n                    if (translatedRect.top + translatedRect.height <= rect.top) {\r\n                        filteredContainers.push(container);\r\n                    }\r\n                    break;\r\n                case KeyboardCode.Up:\r\n                    if (translatedRect.top >= rect.top + rect.height) {\r\n                        filteredContainers.push(container);\r\n                    }\r\n                    break;\r\n                case KeyboardCode.Left:\r\n                    if (translatedRect.left >= rect.left + rect.width) {\r\n                        filteredContainers.push(container);\r\n                    }\r\n                    break;\r\n                case KeyboardCode.Right:\r\n                    if (translatedRect.left + translatedRect.width <= rect.left) {\r\n                        filteredContainers.push(container);\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n        const closestId = closestCorners({\r\n            active,\r\n            collisionRect: translatedRect,\r\n            droppableContainers: filteredContainers,\r\n        });\r\n        if (closestId) {\r\n            const newNode = droppableContainers.get(closestId)?.node.current;\r\n            if (newNode) {\r\n                const newScrollAncestors = getScrollableAncestors(newNode);\r\n                const hasDifferentScrollAncestors = newScrollAncestors.some((element, index) => scrollableAncestors[index] !== element);\r\n                const newRect = getViewRect(newNode);\r\n                const offset = hasDifferentScrollAncestors\r\n                    ? {\r\n                        x: 0,\r\n                        y: 0,\r\n                    }\r\n                    : {\r\n                        x: translatedRect.width - newRect.width,\r\n                        y: translatedRect.height - newRect.height,\r\n                    };\r\n                const newCoordinates = {\r\n                    x: newRect.left - offset.x,\r\n                    y: newRect.top - offset.y,\r\n                };\r\n                return newCoordinates;\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\n//# sourceMappingURL=sortableKeyboardCoordinates.js.map","references":["D:/Developer/Work/tutorials/dnd-kit/packages/core/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"sortableKeyboardCoordinates.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/sensors/keyboard/sortableKeyboardCoordinates.ts\"],\"names\":[],\"mappings\":\"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\"}"}
