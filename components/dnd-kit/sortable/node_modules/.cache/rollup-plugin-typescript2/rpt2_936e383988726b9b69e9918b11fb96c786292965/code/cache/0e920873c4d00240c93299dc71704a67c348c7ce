{"code":"// To-do: We should be calculating scale transformation\r\nconst defaultScale = {\r\n    scaleX: 1,\r\n    scaleY: 1,\r\n};\r\nexport const verticalListSortingStrategy = ({ activeIndex, activeNodeRect: fallbackActiveRect, index, layoutRects, overIndex, }) => {\r\n    const activeNodeRect = layoutRects[activeIndex] ?? fallbackActiveRect;\r\n    if (!activeNodeRect) {\r\n        return null;\r\n    }\r\n    if (index === activeIndex) {\r\n        const overIndexRect = layoutRects[overIndex];\r\n        if (!overIndexRect) {\r\n            return null;\r\n        }\r\n        return {\r\n            x: 0,\r\n            y: activeIndex < overIndex\r\n                ? overIndexRect.offsetTop +\r\n                    overIndexRect.height -\r\n                    (activeNodeRect.offsetTop + activeNodeRect.height)\r\n                : overIndexRect.offsetTop - activeNodeRect.offsetTop,\r\n            ...defaultScale,\r\n        };\r\n    }\r\n    const itemGap = getItemGap(layoutRects, index, activeIndex);\r\n    if (index > activeIndex && index <= overIndex) {\r\n        return {\r\n            x: 0,\r\n            y: -activeNodeRect.height - itemGap,\r\n            ...defaultScale,\r\n        };\r\n    }\r\n    if (index < activeIndex && index >= overIndex) {\r\n        return {\r\n            x: 0,\r\n            y: activeNodeRect.height + itemGap,\r\n            ...defaultScale,\r\n        };\r\n    }\r\n    return {\r\n        x: 0,\r\n        y: 0,\r\n        ...defaultScale,\r\n    };\r\n};\r\nfunction getItemGap(layoutRects, index, activeIndex) {\r\n    const currentRect = layoutRects[index];\r\n    const previousRect = layoutRects[index - 1];\r\n    const nextRect = layoutRects[index + 1];\r\n    if (!currentRect) {\r\n        return 0;\r\n    }\r\n    if (activeIndex < index) {\r\n        return previousRect\r\n            ? currentRect.offsetTop - (previousRect.offsetTop + previousRect.height)\r\n            : nextRect\r\n                ? nextRect.offsetTop - (currentRect.offsetTop + currentRect.height)\r\n                : 0;\r\n    }\r\n    return nextRect\r\n        ? nextRect.offsetTop - (currentRect.offsetTop + currentRect.height)\r\n        : previousRect\r\n            ? currentRect.offsetTop - (previousRect.offsetTop + previousRect.height)\r\n            : 0;\r\n}\r\n//# sourceMappingURL=verticalListSorting.js.map","references":["D:/Developer/Work/tutorials/dnd-kit/packages/core/dist/index.d.ts","D:/Developer/Work/tutorials/dnd-kit/packages/sortable/src/types/index.ts"],"map":"{\"version\":3,\"file\":\"verticalListSorting.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/strategies/verticalListSorting.ts\"],\"names\":[],\"mappings\":\"AAGA,uDAAuD;AACvD,MAAM,YAAY,GAAG;IACnB,MAAM,EAAE,CAAC;IACT,MAAM,EAAE,CAAC;CACV,CAAC;AAEF,MAAM,CAAC,MAAM,2BAA2B,GAAoB,CAAC,EAC3D,WAAW,EACX,cAAc,EAAE,kBAAkB,EAClC,KAAK,EACL,WAAW,EACX,SAAS,GACV,EAAE,EAAE;IACH,MAAM,cAAc,GAAG,WAAW,CAAC,WAAW,CAAC,IAAI,kBAAkB,CAAC;IAEtE,IAAI,CAAC,cAAc,EAAE;QACnB,OAAO,IAAI,CAAC;KACb;IAED,IAAI,KAAK,KAAK,WAAW,EAAE;QACzB,MAAM,aAAa,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC;QAE7C,IAAI,CAAC,aAAa,EAAE;YAClB,OAAO,IAAI,CAAC;SACb;QAED,OAAO;YACL,CAAC,EAAE,CAAC;YACJ,CAAC,EACC,WAAW,GAAG,SAAS;gBACrB,CAAC,CAAC,aAAa,CAAC,SAAS;oBACvB,aAAa,CAAC,MAAM;oBACpB,CAAC,cAAc,CAAC,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC;gBACpD,CAAC,CAAC,aAAa,CAAC,SAAS,GAAG,cAAc,CAAC,SAAS;YACxD,GAAG,YAAY;SAChB,CAAC;KACH;IAED,MAAM,OAAO,GAAG,UAAU,CAAC,WAAW,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;IAE5D,IAAI,KAAK,GAAG,WAAW,IAAI,KAAK,IAAI,SAAS,EAAE;QAC7C,OAAO;YACL,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC,cAAc,CAAC,MAAM,GAAG,OAAO;YACnC,GAAG,YAAY;SAChB,CAAC;KACH;IAED,IAAI,KAAK,GAAG,WAAW,IAAI,KAAK,IAAI,SAAS,EAAE;QAC7C,OAAO;YACL,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,cAAc,CAAC,MAAM,GAAG,OAAO;YAClC,GAAG,YAAY;SAChB,CAAC;KACH;IAED,OAAO;QACL,CAAC,EAAE,CAAC;QACJ,CAAC,EAAE,CAAC;QACJ,GAAG,YAAY;KAChB,CAAC;AACJ,CAAC,CAAC;AAEF,SAAS,UAAU,CACjB,WAAyB,EACzB,KAAa,EACb,WAAmB;IAEnB,MAAM,WAAW,GAA2B,WAAW,CAAC,KAAK,CAAC,CAAC;IAC/D,MAAM,YAAY,GAA2B,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IACpE,MAAM,QAAQ,GAA2B,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IAEhE,IAAI,CAAC,WAAW,EAAE;QAChB,OAAO,CAAC,CAAC;KACV;IAED,IAAI,WAAW,GAAG,KAAK,EAAE;QACvB,OAAO,YAAY;YACjB,CAAC,CAAC,WAAW,CAAC,SAAS,GAAG,CAAC,YAAY,CAAC,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC;YACxE,CAAC,CAAC,QAAQ;gBACV,CAAC,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,WAAW,CAAC,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC;gBACnE,CAAC,CAAC,CAAC,CAAC;KACP;IAED,OAAO,QAAQ;QACb,CAAC,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,WAAW,CAAC,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC;QACnE,CAAC,CAAC,YAAY;YACd,CAAC,CAAC,WAAW,CAAC,SAAS,GAAG,CAAC,YAAY,CAAC,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC;YACxE,CAAC,CAAC,CAAC,CAAC;AACR,CAAC\"}"}
