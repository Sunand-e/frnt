{"code":"import React, { useEffect, useMemo, useRef } from 'react';\r\nimport { useDndContext } from '@dnd-kit/core';\r\nimport { useIsomorphicLayoutEffect, useUniqueId } from '@dnd-kit/utilities';\r\nimport { getSortedRects } from '../utilities';\r\nimport { rectSortingStrategy } from '../strategies';\r\nconst ID_PREFIX = 'Sortable';\r\nexport const Context = React.createContext({\r\n    activeIndex: -1,\r\n    containerId: ID_PREFIX,\r\n    disableTransforms: false,\r\n    items: [],\r\n    overIndex: -1,\r\n    useDragOverlay: false,\r\n    sortedRects: [],\r\n    strategy: rectSortingStrategy,\r\n    wasDragging: { current: false },\r\n});\r\nexport function SortableContext({ children, id, items: userDefinedItems, strategy = rectSortingStrategy, }) {\r\n    const { active, dragOverlay, droppableRects, over, recomputeLayouts, willRecomputeLayouts, } = useDndContext();\r\n    const containerId = useUniqueId(ID_PREFIX, id);\r\n    const useDragOverlay = Boolean(dragOverlay.rect !== null);\r\n    const items = useMemo(() => userDefinedItems.map((item) => typeof item === 'string' ? item : item.id), [userDefinedItems]);\r\n    const isDragging = active != null;\r\n    const wasDragging = useRef(false);\r\n    const activeIndex = active ? items.indexOf(active.id) : -1;\r\n    const isSorting = activeIndex !== -1;\r\n    const overIndex = over ? items.indexOf(over.id) : -1;\r\n    const previousItemsRef = useRef(items);\r\n    const sortedRects = getSortedRects(items, droppableRects);\r\n    const itemsHaveChanged = !isEqual(items, previousItemsRef.current);\r\n    const disableTransforms = (overIndex !== -1 && activeIndex === -1) || itemsHaveChanged;\r\n    useIsomorphicLayoutEffect(() => {\r\n        if (itemsHaveChanged && isSorting && !willRecomputeLayouts) {\r\n            // To-do: Add partial recompution of only subset of rects\r\n            recomputeLayouts();\r\n        }\r\n    }, [itemsHaveChanged, isSorting, recomputeLayouts, willRecomputeLayouts]);\r\n    useEffect(() => {\r\n        previousItemsRef.current = items;\r\n    }, [items]);\r\n    useEffect(() => {\r\n        wasDragging.current = isDragging;\r\n    }, [isDragging]);\r\n    const contextValue = useMemo(() => ({\r\n        activeIndex,\r\n        containerId,\r\n        disableTransforms,\r\n        items,\r\n        overIndex,\r\n        useDragOverlay,\r\n        sortedRects,\r\n        strategy,\r\n        wasDragging,\r\n    }), [\r\n        activeIndex,\r\n        containerId,\r\n        disableTransforms,\r\n        items,\r\n        overIndex,\r\n        sortedRects,\r\n        useDragOverlay,\r\n        strategy,\r\n        wasDragging,\r\n    ]);\r\n    return React.createElement(Context.Provider, { value: contextValue }, children);\r\n}\r\nfunction isEqual(arr1, arr2) {\r\n    return arr1.join() === arr2.join();\r\n}\r\n//# sourceMappingURL=SortableContext.js.map","references":["D:/Developer/Work/tutorials/dnd-kit/node_modules/@types/react/index.d.ts","D:/Developer/Work/tutorials/dnd-kit/packages/core/dist/index.d.ts","D:/Developer/Work/tutorials/dnd-kit/packages/utilities/dist/index.d.ts","D:/Developer/Work/tutorials/dnd-kit/packages/sortable/src/types/index.ts","D:/Developer/Work/tutorials/dnd-kit/packages/sortable/src/utilities/index.ts","D:/Developer/Work/tutorials/dnd-kit/packages/sortable/src/strategies/index.ts"],"map":"{\"version\":3,\"file\":\"SortableContext.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/components/SortableContext.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"D:/Developer/Work/tutorials/dnd-kit/packages/sortable/components/SortableContext.d.ts","writeByteOrderMark":false,"text":"import React, { MutableRefObject } from 'react';\r\nimport { LayoutRect, UniqueIdentifier } from '@dnd-kit/core';\r\nimport type { SortingStrategy } from '../types';\r\nexport interface Props {\r\n    children: React.ReactNode;\r\n    items: (UniqueIdentifier | {\r\n        id: UniqueIdentifier;\r\n    })[];\r\n    strategy?: SortingStrategy;\r\n    id?: string;\r\n}\r\ninterface ContextDescriptor {\r\n    activeIndex: number;\r\n    containerId: string;\r\n    disableTransforms: boolean;\r\n    items: UniqueIdentifier[];\r\n    overIndex: number;\r\n    useDragOverlay: boolean;\r\n    sortedRects: LayoutRect[];\r\n    strategy: SortingStrategy;\r\n    wasDragging: MutableRefObject<boolean>;\r\n}\r\nexport declare const Context: React.Context<ContextDescriptor>;\r\nexport declare function SortableContext({ children, id, items: userDefinedItems, strategy, }: Props): JSX.Element;\r\nexport {};\r\n"}}
